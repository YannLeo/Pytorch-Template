# A config file for MCD (Maximum Classifier Discrepancy for Unsupervised Domain
# Adaptation) on MNIST and MNIST-M dataset
#
# @Time    : 23/01/11 20:04
# @Author  : 
# @Notes   : MCD tests (https://arxiv.org/abs/1712.02560).

name = 'mcd_m_mm'      # where to save the results under ./saved/
trainer = 'MCDTrainer' # the trainer name; main procedure

############################### Important hyper parameters!!
discrepancy_steps = 4
discrepancy_weight = 15


############################### Miscellaneous
epochs = 45
num_classes = 10
save_period = 10
# Whether to plot the confusion matrices in each test epoch to ./saved/**/confusion/*.jpg.
plot_confusion = false

############################### Neural Networks
# The base model
[model]
name = 'SimpleCNN2D'        # MNISTEncoder, out_dim
args = { num_classes = 64 } # dim of the output feature vector

############################### Dataloaders
# On source domian
[dataloader_source] # train
args = { batch_size = 128, num_workers = 2, shuffle = true, drop_last = false, pin_memory = true }
[dataloader_source.dataset]
name = "MNISTDataset"
args = { channels = 3, train = true }

[dataloader_val] # test on src
args = { batch_size = 128, num_workers = 2, shuffle = false, drop_last = false, pin_memory = true }
[dataloader_val.dataset]
name = "MNISTDataset"
args = { channels = 3, train = false }

# On target domain
[dataloader_target] # train
args = { batch_size = 128, num_workers = 2, shuffle = true, drop_last = false, pin_memory = true }
[dataloader_target.dataset]
name = "MNIST_MDataset"
args = { train = true }

[dataloader_test] # test on tgt
args = { batch_size = 128, num_workers = 2, shuffle = false, drop_last = false, pin_memory = true }
[dataloader_test.dataset]
name = "MNIST_MDataset"
args = { train = false }

############################### Learning Rate Schedulers for Optimizers
[lr_scheduler]
name = "StepLR"
init_lr = 0.0006
args = { step_size = 2500, gamma = 0.6 }

[lr_scheduler_C]
name = "StepLR"
init_lr = 0.0003
# args = { step_size = 2500, gamma = 0.6 }
args = { epoch_size = 15.67, gamma = 0.6 } # epoch_size can be converted to step_size
